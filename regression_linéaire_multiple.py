# -*- coding: utf-8 -*-
"""Regression Linéaire Multiple.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dhU-4QE7trtHFzBv93eWmeT2V7wVAt_i

# Regression Linéaire Multiple

## Etape 1 : Chargement des Bibliothèques
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

"""## Etape 2 : Chargement des données"""

dataset = pd.read_csv('50_Startups.csv')
X = dataset.iloc[:, :-1].values
Y = dataset.iloc[:, -1].values

print(X)

"""## Etape 3 : Encodage des données catégorielles"""

from sklearn.preprocessing import OneHotEncoder
from sklearn.compose import ColumnTransformer

ct = ColumnTransformer(transformers = [('encoder', OneHotEncoder(), [3])], remainder = 'passthrough')
X = np.array(ct.fit_transform(X))

print(X)

"""## Etape 4 : Diviser le dataset en Training set et Test set"""

from sklearn.model_selection import train_test_split

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2, random_state = 0)

"""## Etape 5 : Entrainer le modèle de regression linéaire multiple sur le Training set"""

from sklearn.linear_model import LinearRegression

regressor = LinearRegression()  # construction du modèle
regressor.fit(X_train, Y_train)

"""## Etape 6 : Prédiction des résultats du Test set"""

y_pred = regressor.predict(X_test)  # vecteur des valeurs prédites du profit
np.set_printoptions(precision=2)
# affichage des deux vecteurs: valeurs prédites du profit et valeurs réelles du profit
print(np.concatenate((y_pred.reshape(len(y_pred),1), Y_test.reshape(len(Y_test),1)), 1))
# la première colonne ce sont les valeurs prédites par le modèle et la deuxième colonne les valeurs réelles du profit